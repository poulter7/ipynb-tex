\NeedsTeXFormat{LaTeX2e}[1994/12/01]
\ProvidesPackage{ipynb-tex}[2017/08/21 v0.1 ipynb in LaTeX]

\RequirePackage{luatextra}
\RequirePackage{graphicx}
\RequirePackage{minted}
\providecommand{\ipynbsource}[2]{
    % not using \inputpygments because 
    % (1) I can't get it to refresh cells
    % (2) The way I have it set up it needs two runs of pythontex
    % Let's play to the package strengths, pythontex to run code, minted to format
    \ipynbinclude{#1}
    \IfFileExists{./.cells/#1/#2.source}{
        \inputminted{python}{./.cells/#1/#2.source}
    }{}
}
\providecommand{\ipynbrawsource}[2]{
    \ipynbinclude{#1}
    \IfFileExists{./.cells/#1/#2.source}{\input{./.cells/#1/#2.source}}{./.cells/#1/#2.source}
}
\providecommand{\ipynboutput}[2]{
    \ipynbinclude{#1}
    \IfFileExists{./.cells/#1/#2.output}{
        \inputminted{python}{./.cells/#1/#2.output}
    }{}
}
\providecommand{\ipynbimage}[2]{
    \ipynbinclude{#1}
    \IfFileExists{./.cells/#1/#2.png}{\includegraphics[width=\linewidth]{./.cells/#1/#2.png}}{./.cells/#1/#2.png}
    
}
\providecommand{\ipynbtex}[2]{
    \ipynbinclude{#1}
    \IfFileExists{./.cells/#1/#2.tex}{\input{./.cells/#1/#2.tex}}{./.cells/#1/#2.tex}
}
\providecommand{\ipynbrawoutput}[2]{
    \ipynbinclude{#1}
    \IfFileExists{./.cells/#1/#2.output}{\input{./.cells/#1/#2.output}}{./.cells/#1/#2.output}
}
% \providecommand{\ipynbsourceinline}[2]{
%    \mintinline{python}{./.cells/#1/#2.source}
% }
% \providecommand{\ipynboutputinline}[2]{
%    \mintinline{python}{./.cells/#1/#2.output}
% }
\providecommand{\ipynb}[2]{
    \ipynbsource{#1}{#2}
    \ipynboutput{#1}{#2}
}
\providecommand{\ipynbinclude}[1]{
    \begin{luacode}
    function read(file)
        local handler = io.open(file, "rb")
        local content = handler:read("*all")
        handler:close()
        return content
    end
    JSON = (loadfile "JSON.lua")()
    r = JSON:decode(read(#1))
    \end{luacode}
    \directlua{
        tex.print(r)
    }
}
